{"ast":null,"code":"import React,{useState}from'react';import{Card,CardContent}from'./ui/Card';import{Button}from'./ui/Button';import{Input}from'./ui/Input';import{Bot,User,Copy,Check,Edit2,Save,X}from'lucide-react';import{cn}from'../lib/utils';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Message=_ref=>{let{message,time,onEdit}=_ref;const isUser=message.role==='user';const[copied,setCopied]=useState(false);const[isEditing,setIsEditing]=useState(false);const[editContent,setEditContent]=useState(message.content);const handleCopy=async()=>{try{await navigator.clipboard.writeText(message.content);setCopied(true);setTimeout(()=>setCopied(false),2000);}catch(err){console.error('Kopyalama başarısız:',err);}};const handleEdit=()=>{setIsEditing(true);setEditContent(message.content);};const handleSave=()=>{if(onEdit&&editContent.trim()){onEdit(message.id,editContent.trim());setIsEditing(false);}};const handleCancel=()=>{setIsEditing(false);setEditContent(message.content);};return/*#__PURE__*/_jsxs(\"div\",{className:\"chatgpt-message \".concat(isUser?'user':'assistant'),children:[/*#__PURE__*/_jsx(\"div\",{className:cn(\"flex-shrink-0 w-6 h-6 rounded-full flex items-center justify-center\",isUser?\"bg-green-500 text-white\":\"bg-gray-200 dark:bg-gray-700 text-gray-600 dark:text-gray-300\"),children:isUser?/*#__PURE__*/_jsx(User,{className:\"w-3 h-3\"}):/*#__PURE__*/_jsx(Bot,{className:\"w-3 h-3\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 min-w-0\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"group relative\",children:isEditing?/*#__PURE__*/_jsxs(\"div\",{className:\"chatgpt-message-content\",children:[/*#__PURE__*/_jsx(\"input\",{value:editContent,onChange:e=>setEditContent(e.target.value),className:\"w-full mb-2 text-sm bg-transparent border-none outline-none resize-none\",autoFocus:true}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-2\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:handleSave,className:\"px-2 py-1 bg-green-500 hover:bg-green-600 text-white text-xs rounded flex items-center space-x-1 transition-colors\",children:[/*#__PURE__*/_jsx(Save,{className:\"w-3 h-3\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Kaydet\"})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:handleCancel,className:\"px-2 py-1 bg-gray-500 hover:bg-gray-600 text-white text-xs rounded flex items-center space-x-1 transition-colors\",children:[/*#__PURE__*/_jsx(X,{className:\"w-3 h-3\"}),/*#__PURE__*/_jsx(\"span\",{children:\"\\u0130ptal\"})]})]})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"chatgpt-message-content\",children:/*#__PURE__*/_jsx(\"div\",{className:\"message-text\",children:message.content})}),/*#__PURE__*/_jsxs(\"div\",{className:cn(\"absolute top-1 opacity-0 group-hover:opacity-100 transition-opacity flex space-x-1\",isUser?\"left-1\":\"right-1\"),children:[/*#__PURE__*/_jsx(\"button\",{className:\"h-5 w-5 hover:bg-black/10 dark:hover:bg-white/10 rounded-full flex items-center justify-center transition-colors\",onClick:handleCopy,children:copied?/*#__PURE__*/_jsx(Check,{className:\"w-3 h-3 text-green-500\"}):/*#__PURE__*/_jsx(Copy,{className:\"w-3 h-3\"})}),isUser&&onEdit&&/*#__PURE__*/_jsx(\"button\",{className:\"h-5 w-5 hover:bg-black/10 dark:hover:bg-white/10 rounded-full flex items-center justify-center transition-colors\",onClick:handleEdit,children:/*#__PURE__*/_jsx(Edit2,{className:\"w-3 h-3\"})})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-500 dark:text-gray-400 mt-1\",children:time})]})]});};export default Message;","map":{"version":3,"names":["React","useState","Card","CardContent","Button","Input","Bot","User","Copy","Check","Edit2","Save","X","cn","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Message","_ref","message","time","onEdit","isUser","role","copied","setCopied","isEditing","setIsEditing","editContent","setEditContent","content","handleCopy","navigator","clipboard","writeText","setTimeout","err","console","error","handleEdit","handleSave","trim","id","handleCancel","className","concat","children","value","onChange","e","target","autoFocus","onClick"],"sources":["C:/Users/xeyal/Desktop/Ai/app/frontend/src/components/Message.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Card, CardContent } from './ui/Card';\nimport { Button } from './ui/Button';\nimport { Input } from './ui/Input';\nimport { Bot, User, Copy, Check, Edit2, Save, X } from 'lucide-react';\nimport { cn } from '../lib/utils';\n\nconst Message = ({ message, time, onEdit }) => {\n  const isUser = message.role === 'user';\n  const [copied, setCopied] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editContent, setEditContent] = useState(message.content);\n\n  const handleCopy = async () => {\n    try {\n      await navigator.clipboard.writeText(message.content);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 2000);\n    } catch (err) {\n      console.error('Kopyalama başarısız:', err);\n    }\n  };\n\n  const handleEdit = () => {\n    setIsEditing(true);\n    setEditContent(message.content);\n  };\n\n  const handleSave = () => {\n    if (onEdit && editContent.trim()) {\n      onEdit(message.id, editContent.trim());\n      setIsEditing(false);\n    }\n  };\n\n  const handleCancel = () => {\n    setIsEditing(false);\n    setEditContent(message.content);\n  };\n\n  return (\n    <div className={`chatgpt-message ${isUser ? 'user' : 'assistant'}`}>\n      {/* Avatar */}\n      <div className={cn(\n        \"flex-shrink-0 w-6 h-6 rounded-full flex items-center justify-center\",\n        isUser ? \"bg-green-500 text-white\" : \"bg-gray-200 dark:bg-gray-700 text-gray-600 dark:text-gray-300\"\n      )}>\n        {isUser ? (\n          <User className=\"w-3 h-3\" />\n        ) : (\n          <Bot className=\"w-3 h-3\" />\n        )}\n      </div>\n\n      {/* Message Content */}\n      <div className=\"flex-1 min-w-0\">\n        <div className=\"group relative\">\n          {isEditing ? (\n            <div className=\"chatgpt-message-content\">\n              <input\n                value={editContent}\n                onChange={(e) => setEditContent(e.target.value)}\n                className=\"w-full mb-2 text-sm bg-transparent border-none outline-none resize-none\"\n                autoFocus\n              />\n              <div className=\"flex space-x-2\">\n                <button \n                  onClick={handleSave} \n                  className=\"px-2 py-1 bg-green-500 hover:bg-green-600 text-white text-xs rounded flex items-center space-x-1 transition-colors\"\n                >\n                  <Save className=\"w-3 h-3\" />\n                  <span>Kaydet</span>\n                </button>\n                <button \n                  onClick={handleCancel} \n                  className=\"px-2 py-1 bg-gray-500 hover:bg-gray-600 text-white text-xs rounded flex items-center space-x-1 transition-colors\"\n                >\n                  <X className=\"w-3 h-3\" />\n                  <span>İptal</span>\n                </button>\n              </div>\n            </div>\n          ) : (\n            <>\n              <div className=\"chatgpt-message-content\">\n                <div className=\"message-text\">\n                  {message.content}\n                </div>\n              </div>\n              \n              {/* Action Buttons */}\n              <div className={cn(\n                \"absolute top-1 opacity-0 group-hover:opacity-100 transition-opacity flex space-x-1\",\n                isUser ? \"left-1\" : \"right-1\"\n              )}>\n                <button\n                  className=\"h-5 w-5 hover:bg-black/10 dark:hover:bg-white/10 rounded-full flex items-center justify-center transition-colors\"\n                  onClick={handleCopy}\n                >\n                  {copied ? (\n                    <Check className=\"w-3 h-3 text-green-500\" />\n                  ) : (\n                    <Copy className=\"w-3 h-3\" />\n                  )}\n                </button>\n                {isUser && onEdit && (\n                  <button\n                    className=\"h-5 w-5 hover:bg-black/10 dark:hover:bg-white/10 rounded-full flex items-center justify-center transition-colors\"\n                    onClick={handleEdit}\n                  >\n                    <Edit2 className=\"w-3 h-3\" />\n                  </button>\n                )}\n              </div>\n            </>\n          )}\n        </div>\n        \n        {/* Time */}\n        <div className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n          {time}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Message;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,IAAI,CAAEC,WAAW,KAAQ,WAAW,CAC7C,OAASC,MAAM,KAAQ,aAAa,CACpC,OAASC,KAAK,KAAQ,YAAY,CAClC,OAASC,GAAG,CAAEC,IAAI,CAAEC,IAAI,CAAEC,KAAK,CAAEC,KAAK,CAAEC,IAAI,CAAEC,CAAC,KAAQ,cAAc,CACrE,OAASC,EAAE,KAAQ,cAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAElC,KAAM,CAAAC,OAAO,CAAGC,IAAA,EAA+B,IAA9B,CAAEC,OAAO,CAAEC,IAAI,CAAEC,MAAO,CAAC,CAAAH,IAAA,CACxC,KAAM,CAAAI,MAAM,CAAGH,OAAO,CAACI,IAAI,GAAK,MAAM,CACtC,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAG3B,QAAQ,CAAC,KAAK,CAAC,CAC3C,KAAM,CAAC4B,SAAS,CAAEC,YAAY,CAAC,CAAG7B,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAAC8B,WAAW,CAAEC,cAAc,CAAC,CAAG/B,QAAQ,CAACqB,OAAO,CAACW,OAAO,CAAC,CAE/D,KAAM,CAAAC,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CACF,KAAM,CAAAC,SAAS,CAACC,SAAS,CAACC,SAAS,CAACf,OAAO,CAACW,OAAO,CAAC,CACpDL,SAAS,CAAC,IAAI,CAAC,CACfU,UAAU,CAAC,IAAMV,SAAS,CAAC,KAAK,CAAC,CAAE,IAAI,CAAC,CAC1C,CAAE,MAAOW,GAAG,CAAE,CACZC,OAAO,CAACC,KAAK,CAAC,sBAAsB,CAAEF,GAAG,CAAC,CAC5C,CACF,CAAC,CAED,KAAM,CAAAG,UAAU,CAAGA,CAAA,GAAM,CACvBZ,YAAY,CAAC,IAAI,CAAC,CAClBE,cAAc,CAACV,OAAO,CAACW,OAAO,CAAC,CACjC,CAAC,CAED,KAAM,CAAAU,UAAU,CAAGA,CAAA,GAAM,CACvB,GAAInB,MAAM,EAAIO,WAAW,CAACa,IAAI,CAAC,CAAC,CAAE,CAChCpB,MAAM,CAACF,OAAO,CAACuB,EAAE,CAAEd,WAAW,CAACa,IAAI,CAAC,CAAC,CAAC,CACtCd,YAAY,CAAC,KAAK,CAAC,CACrB,CACF,CAAC,CAED,KAAM,CAAAgB,YAAY,CAAGA,CAAA,GAAM,CACzBhB,YAAY,CAAC,KAAK,CAAC,CACnBE,cAAc,CAACV,OAAO,CAACW,OAAO,CAAC,CACjC,CAAC,CAED,mBACEhB,KAAA,QAAK8B,SAAS,oBAAAC,MAAA,CAAqBvB,MAAM,CAAG,MAAM,CAAG,WAAW,CAAG,CAAAwB,QAAA,eAEjElC,IAAA,QAAKgC,SAAS,CAAElC,EAAE,CAChB,qEAAqE,CACrEY,MAAM,CAAG,yBAAyB,CAAG,+DACvC,CAAE,CAAAwB,QAAA,CACCxB,MAAM,cACLV,IAAA,CAACR,IAAI,EAACwC,SAAS,CAAC,SAAS,CAAE,CAAC,cAE5BhC,IAAA,CAACT,GAAG,EAACyC,SAAS,CAAC,SAAS,CAAE,CAC3B,CACE,CAAC,cAGN9B,KAAA,QAAK8B,SAAS,CAAC,gBAAgB,CAAAE,QAAA,eAC7BlC,IAAA,QAAKgC,SAAS,CAAC,gBAAgB,CAAAE,QAAA,CAC5BpB,SAAS,cACRZ,KAAA,QAAK8B,SAAS,CAAC,yBAAyB,CAAAE,QAAA,eACtClC,IAAA,UACEmC,KAAK,CAAEnB,WAAY,CACnBoB,QAAQ,CAAGC,CAAC,EAAKpB,cAAc,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAChDH,SAAS,CAAC,yEAAyE,CACnFO,SAAS,MACV,CAAC,cACFrC,KAAA,QAAK8B,SAAS,CAAC,gBAAgB,CAAAE,QAAA,eAC7BhC,KAAA,WACEsC,OAAO,CAAEZ,UAAW,CACpBI,SAAS,CAAC,oHAAoH,CAAAE,QAAA,eAE9HlC,IAAA,CAACJ,IAAI,EAACoC,SAAS,CAAC,SAAS,CAAE,CAAC,cAC5BhC,IAAA,SAAAkC,QAAA,CAAM,QAAM,CAAM,CAAC,EACb,CAAC,cACThC,KAAA,WACEsC,OAAO,CAAET,YAAa,CACtBC,SAAS,CAAC,kHAAkH,CAAAE,QAAA,eAE5HlC,IAAA,CAACH,CAAC,EAACmC,SAAS,CAAC,SAAS,CAAE,CAAC,cACzBhC,IAAA,SAAAkC,QAAA,CAAM,YAAK,CAAM,CAAC,EACZ,CAAC,EACN,CAAC,EACH,CAAC,cAENhC,KAAA,CAAAE,SAAA,EAAA8B,QAAA,eACElC,IAAA,QAAKgC,SAAS,CAAC,yBAAyB,CAAAE,QAAA,cACtClC,IAAA,QAAKgC,SAAS,CAAC,cAAc,CAAAE,QAAA,CAC1B3B,OAAO,CAACW,OAAO,CACb,CAAC,CACH,CAAC,cAGNhB,KAAA,QAAK8B,SAAS,CAAElC,EAAE,CAChB,oFAAoF,CACpFY,MAAM,CAAG,QAAQ,CAAG,SACtB,CAAE,CAAAwB,QAAA,eACAlC,IAAA,WACEgC,SAAS,CAAC,kHAAkH,CAC5HQ,OAAO,CAAErB,UAAW,CAAAe,QAAA,CAEnBtB,MAAM,cACLZ,IAAA,CAACN,KAAK,EAACsC,SAAS,CAAC,wBAAwB,CAAE,CAAC,cAE5ChC,IAAA,CAACP,IAAI,EAACuC,SAAS,CAAC,SAAS,CAAE,CAC5B,CACK,CAAC,CACRtB,MAAM,EAAID,MAAM,eACfT,IAAA,WACEgC,SAAS,CAAC,kHAAkH,CAC5HQ,OAAO,CAAEb,UAAW,CAAAO,QAAA,cAEpBlC,IAAA,CAACL,KAAK,EAACqC,SAAS,CAAC,SAAS,CAAE,CAAC,CACvB,CACT,EACE,CAAC,EACN,CACH,CACE,CAAC,cAGNhC,IAAA,QAAKgC,SAAS,CAAC,+CAA+C,CAAAE,QAAA,CAC3D1B,IAAI,CACF,CAAC,EACH,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAH,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}