{"ast":null,"code":"import React,{createContext,useContext,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const NotificationContext=/*#__PURE__*/createContext();export const NotificationProvider=_ref=>{let{children}=_ref;const[notifications,setNotifications]=useState([]);const showNotification=function(title){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const notification={id:Date.now(),title,message:options.message||'',type:options.type||'info',duration:options.duration||5000};setNotifications(prev=>[...prev,notification]);setTimeout(()=>{setNotifications(prev=>prev.filter(n=>n.id!==notification.id));},notification.duration);};return/*#__PURE__*/_jsx(NotificationContext.Provider,{value:{showNotification},children:children});};export const useNotifications=()=>{const context=useContext(NotificationContext);if(!context){throw new Error('useNotifications must be used within a NotificationProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useState","jsx","_jsx","NotificationContext","NotificationProvider","_ref","children","notifications","setNotifications","showNotification","title","options","arguments","length","undefined","notification","id","Date","now","message","type","duration","prev","setTimeout","filter","n","Provider","value","useNotifications","context","Error"],"sources":["C:/Users/xeyal/Desktop/Ai/app/frontend/src/components/NotificationBell.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nconst NotificationContext = createContext();\n\nexport const NotificationProvider = ({ children }) => {\n  const [notifications, setNotifications] = useState([]);\n\n  const showNotification = (title, options = {}) => {\n    const notification = {\n      id: Date.now(),\n      title,\n      message: options.message || '',\n      type: options.type || 'info',\n      duration: options.duration || 5000,\n    };\n\n    setNotifications(prev => [...prev, notification]);\n\n    setTimeout(() => {\n      setNotifications(prev => prev.filter(n => n.id !== notification.id));\n    }, notification.duration);\n  };\n\n  return (\n    <NotificationContext.Provider value={{ showNotification }}>\n      {children}\n    </NotificationContext.Provider>\n  );\n};\n\nexport const useNotifications = () => {\n  const context = useContext(NotificationContext);\n  if (!context) {\n    throw new Error('useNotifications must be used within a NotificationProvider');\n  }\n  return context;\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnE,KAAM,CAAAC,mBAAmB,cAAGL,aAAa,CAAC,CAAC,CAE3C,MAAO,MAAM,CAAAM,oBAAoB,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC/C,KAAM,CAACE,aAAa,CAAEC,gBAAgB,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAEtD,KAAM,CAAAS,gBAAgB,CAAG,QAAAA,CAACC,KAAK,CAAmB,IAAjB,CAAAC,OAAO,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CAC3C,KAAM,CAAAG,YAAY,CAAG,CACnBC,EAAE,CAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CACdR,KAAK,CACLS,OAAO,CAAER,OAAO,CAACQ,OAAO,EAAI,EAAE,CAC9BC,IAAI,CAAET,OAAO,CAACS,IAAI,EAAI,MAAM,CAC5BC,QAAQ,CAAEV,OAAO,CAACU,QAAQ,EAAI,IAChC,CAAC,CAEDb,gBAAgB,CAACc,IAAI,EAAI,CAAC,GAAGA,IAAI,CAAEP,YAAY,CAAC,CAAC,CAEjDQ,UAAU,CAAC,IAAM,CACff,gBAAgB,CAACc,IAAI,EAAIA,IAAI,CAACE,MAAM,CAACC,CAAC,EAAIA,CAAC,CAACT,EAAE,GAAKD,YAAY,CAACC,EAAE,CAAC,CAAC,CACtE,CAAC,CAAED,YAAY,CAACM,QAAQ,CAAC,CAC3B,CAAC,CAED,mBACEnB,IAAA,CAACC,mBAAmB,CAACuB,QAAQ,EAACC,KAAK,CAAE,CAAElB,gBAAiB,CAAE,CAAAH,QAAA,CACvDA,QAAQ,CACmB,CAAC,CAEnC,CAAC,CAED,MAAO,MAAM,CAAAsB,gBAAgB,CAAGA,CAAA,GAAM,CACpC,KAAM,CAAAC,OAAO,CAAG9B,UAAU,CAACI,mBAAmB,CAAC,CAC/C,GAAI,CAAC0B,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,6DAA6D,CAAC,CAChF,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}