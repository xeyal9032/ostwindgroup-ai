{"ast":null,"code":"import _objectSpread from\"C:/Users/xeyal/Desktop/Ai/app/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useRef,useCallback}from'react';import Message from'./Message';import{Send,Bot,AlertCircle}from'lucide-react';import{conversationService,chatService,ollamaService}from'../services/api';import{useNotifications}from'./NotificationBell';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ChatWindow=_ref=>{let{conversationId,onNewConversation,onMessagesUpdate}=_ref;const[messages,setMessages]=useState([]);const[inputMessage,setInputMessage]=useState('');const[isLoading,setIsLoading]=useState(false);const[loadingMessages,setLoadingMessages]=useState(false);const[error,setError]=useState(null);const[useOllama,setUseOllama]=useState(false);const[ollamaStatus,setOllamaStatus]=useState(false);const[availableModels,setAvailableModels]=useState([]);const[selectedModel,setSelectedModel]=useState('llama2');const messagesEndRef=useRef(null);const{showNotification}=useNotifications();useEffect(()=>{loadMessages();},[conversationId]);useEffect(()=>{scrollToBottom();},[messages]);// Ollama durumunu kontrol et\nuseEffect(()=>{const checkOllamaStatus=async()=>{try{const isRunning=await ollamaService.checkStatus();setOllamaStatus(isRunning);if(isRunning){const models=await ollamaService.listModels();setAvailableModels(models);if(models.length>0){setSelectedModel(models[0].name);}}}catch(error){console.error('Ollama durumu kontrol edilemedi:',error);setOllamaStatus(false);}};checkOllamaStatus();// Her 30 saniyede bir kontrol et\nconst interval=setInterval(checkOllamaStatus,30000);return()=>clearInterval(interval);},[]);const scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:'smooth'});};const loadMessages=useCallback(async()=>{if(!conversationId)return;setLoadingMessages(true);setError(null);try{const data=await conversationService.getMessages(conversationId);setMessages(data);onMessagesUpdate&&onMessagesUpdate(data);}catch(error){console.error('Mesajlar yüklenirken hata:',error);setError('Mesajlar yüklenemedi');}finally{setLoadingMessages(false);}},[conversationId,onMessagesUpdate]);const handleSendMessage=useCallback(async e=>{e.preventDefault();if(!inputMessage.trim()||isLoading)return;const userMessage={id:Date.now().toString(),conversation_id:conversationId||'new',role:'user',content:inputMessage.trim(),timestamp:new Date().toISOString()};setMessages(prev=>[...prev,userMessage]);setInputMessage('');setIsLoading(true);try{console.log('🎯 ChatWindow - Sending message:',{conversationId,message:inputMessage.trim(),useOllama});let response;if(useOllama&&ollamaStatus){// Ollama kullan\nconsole.log('🤖 Using Ollama with model:',selectedModel);response=await ollamaService.sendMessage(inputMessage.trim(),selectedModel);const assistantMessage={id:(Date.now()+1).toString(),conversation_id:conversationId||'ollama-chat',role:'assistant',content:response.message,timestamp:response.timestamp,model:response.model};setMessages(prev=>[...prev,assistantMessage]);showNotification('Ollama Yanıtı',{message:\"\".concat(response.model,\" modeli ile yan\\u0131t verildi\"),type:'success',duration:3000});}else{// Normal Netlify Functions kullan\n// Mesaj geçmişini hazırla (son 10 mesaj)\nconst messageHistory=messages.slice(-10).map(msg=>({role:msg.role,content:msg.content,timestamp:msg.timestamp}));response=await chatService.sendMessage(conversationId||'new',inputMessage.trim(),messageHistory);console.log('✅ ChatWindow - Response received:',response);const assistantMessage={id:(Date.now()+1).toString(),conversation_id:response.conversation_id,role:'assistant',content:response.message,timestamp:response.timestamp};setMessages(prev=>[...prev,assistantMessage]);showNotification('Yeni AI Yanıtı',{message:'AI asistanınız yanıt verdi',type:'success',duration:3000});if(!conversationId&&response.conversation_id){onNewConversation&&onNewConversation(response.conversation_id);}}setError(null);}catch(error){var _error$response;console.error('❌ ChatWindow - Error sending message:',error);console.error('❌ ChatWindow - Error details:',{message:error.message,stack:error.stack,response:(_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data});// Hata durumunda da gerçek API'yi çağırmaya çalış\ntry{console.log('🔄 Retrying with direct API call...');const directResponse=await fetch('/.netlify/functions/chat',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({conversation_id:conversationId||'new',message:inputMessage.trim()})});if(directResponse.ok){const directData=await directResponse.json();console.log('✅ Direct API call successful:',directData);const assistantMessage={id:(Date.now()+1).toString(),conversation_id:directData.conversation_id,role:'assistant',content:directData.message,timestamp:directData.timestamp};setMessages(prev=>[...prev,assistantMessage]);showNotification('AI Yanıtı',{message:'AI asistanınız yanıt verdi',type:'success',duration:3000});}else{throw new Error(\"HTTP \".concat(directResponse.status));}}catch(retryError){console.error('❌ Retry also failed:',retryError);// Son çare olarak demo mesajı\nconst demoMessage={id:(Date.now()+1).toString(),conversation_id:conversationId||'demo',role:'assistant',content:\"Merhaba! \\\"\".concat(inputMessage.trim(),\"\\\" mesaj\\u0131n\\u0131z\\u0131 ald\\u0131m. Bu bir demo yan\\u0131tt\\u0131r. OstWindGroup AI asistan\\u0131n\\u0131z size yard\\u0131mc\\u0131 olmaya haz\\u0131r!\"),timestamp:new Date().toISOString()};setMessages(prev=>[...prev,demoMessage]);showNotification('Demo Yanıt',{message:'Demo yanıt gönderildi',type:'info',duration:3000});}}finally{setIsLoading(false);}},[inputMessage,isLoading,conversationId,onNewConversation,showNotification]);const handleEditMessage=useCallback((messageId,newContent)=>{setMessages(prev=>prev.map(msg=>msg.id===messageId?_objectSpread(_objectSpread({},msg),{},{content:newContent}):msg));},[]);const formatTime=useCallback(timestamp=>{const date=new Date(timestamp);return date.toLocaleTimeString('tr-TR',{hour:'2-digit',minute:'2-digit'});},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col h-full\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-messages\",children:[loadingMessages?/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center h-full\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-8 h-8 bg-primary/10 rounded-full flex items-center justify-center\",children:/*#__PURE__*/_jsx(Bot,{className:\"w-4 h-4 text-primary\"})}),/*#__PURE__*/_jsx(\"span\",{className:\"text-muted-foreground\",children:\"Mesajlar y\\xFCkleniyor...\"})]})}):error?/*#__PURE__*/_jsxs(\"div\",{className:\"empty-state\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"empty-icon bg-destructive/10\",children:/*#__PURE__*/_jsx(AlertCircle,{className:\"w-8 h-8 text-destructive\"})}),/*#__PURE__*/_jsx(\"h3\",{className:\"empty-title\",children:\"Ba\\u011Flant\\u0131 Hatas\\u0131\"}),/*#__PURE__*/_jsx(\"p\",{className:\"empty-description\",children:error}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setError(null);loadMessages();},className:\"modern-button-primary\",children:\"Tekrar Dene\"})]}):messages.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"empty-state\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"empty-icon\",children:/*#__PURE__*/_jsx(Bot,{className:\"w-12 h-12 text-primary\"})}),/*#__PURE__*/_jsx(\"h2\",{className:\"empty-title\",children:\"OstWindGroup AI'ya Ho\\u015F Geldiniz\"}),/*#__PURE__*/_jsx(\"p\",{className:\"empty-description\",children:\"Size nas\\u0131l yard\\u0131mc\\u0131 olabilirim? A\\u015Fa\\u011F\\u0131ya mesaj\\u0131n\\u0131z\\u0131 yaz\\u0131n ve ak\\u0131ll\\u0131 sohbetimizi ba\\u015Flatal\\u0131m.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-wrap gap-2 justify-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\",children:\"\\uD83D\\uDCA1 Soru sorabilirsiniz\"}),/*#__PURE__*/_jsx(\"span\",{className:\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\",children:\"\\uD83D\\uDE80 Projelerinizde yard\\u0131m\"}),/*#__PURE__*/_jsx(\"span\",{className:\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\",children:\"\\uD83D\\uDCDA Bilgi alabilirsiniz\"})]})]}):/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4\",children:messages.map(message=>/*#__PURE__*/_jsx(\"div\",{className:\"fade-in\",children:/*#__PURE__*/_jsx(Message,{message:message,time:formatTime(message.timestamp),onEdit:handleEditMessage})},message.id))}),isLoading&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3 p-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-8 h-8 bg-primary/10 rounded-full flex items-center justify-center\",children:/*#__PURE__*/_jsx(Bot,{className:\"w-4 h-4 text-primary\"})}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-muted-foreground\",children:\"Yaz\\u0131yor\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"loading-dots\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-dot\"}),/*#__PURE__*/_jsx(\"div\",{className:\"loading-dot\"}),/*#__PURE__*/_jsx(\"div\",{className:\"loading-dot\"})]})]}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),/*#__PURE__*/_jsx(\"div\",{className:\"ai-control-panel\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-800 rounded-lg border\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-2 h-2 rounded-full \".concat(ollamaStatus?'bg-green-500':'bg-red-500')}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium\",children:\"Ollama\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs text-gray-500\",children:[\"(\",ollamaStatus?'Çalışıyor':'Kapalı',\")\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-2 h-2 rounded-full bg-blue-500\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium\",children:\"Groq API\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-gray-500\",children:\"(Aktif)\"})]}),availableModels.length>0&&/*#__PURE__*/_jsx(\"select\",{value:selectedModel,onChange:e=>setSelectedModel(e.target.value),className:\"text-xs px-2 py-1 border rounded bg-white dark:bg-gray-700\",children:availableModels.map(model=>/*#__PURE__*/_jsxs(\"option\",{value:model.name,children:[model.name,\" (\",(model.size/1024/1024/1024).toFixed(1),\"GB)\"]},model.name))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center space-x-2\",children:/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center space-x-1 text-xs\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:useOllama,onChange:e=>setUseOllama(e.target.checked),className:\"rounded\",disabled:!ollamaStatus}),/*#__PURE__*/_jsx(\"span\",{children:\"Ollama Kullan\"})]})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-input-area\",children:/*#__PURE__*/_jsx(\"form\",{onSubmit:handleSendMessage,className:\"relative\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-end space-x-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 relative\",children:/*#__PURE__*/_jsx(\"textarea\",{value:inputMessage,onChange:e=>setInputMessage(e.target.value),placeholder:\"Mesaj\\u0131n\\u0131z\\u0131 yaz\\u0131n...\",disabled:isLoading,className:\"modern-input\",rows:1,onKeyDown:e=>{if(e.key==='Enter'&&!e.shiftKey){e.preventDefault();handleSendMessage(e);}},onInput:e=>{e.target.style.height='auto';e.target.style.height=Math.min(e.target.scrollHeight,128)+'px';}})}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:!inputMessage.trim()||isLoading,className:\"modern-button-primary hover-lift disabled:opacity-50 disabled:cursor-not-allowed\",children:isLoading?/*#__PURE__*/_jsx(\"div\",{className:\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"}):/*#__PURE__*/_jsx(Send,{className:\"w-4 h-4\"})})]})})})]});};export default ChatWindow;","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Message","Send","Bot","AlertCircle","conversationService","chatService","ollamaService","useNotifications","jsx","_jsx","jsxs","_jsxs","ChatWindow","_ref","conversationId","onNewConversation","onMessagesUpdate","messages","setMessages","inputMessage","setInputMessage","isLoading","setIsLoading","loadingMessages","setLoadingMessages","error","setError","useOllama","setUseOllama","ollamaStatus","setOllamaStatus","availableModels","setAvailableModels","selectedModel","setSelectedModel","messagesEndRef","showNotification","loadMessages","scrollToBottom","checkOllamaStatus","isRunning","checkStatus","models","listModels","length","name","console","interval","setInterval","clearInterval","_messagesEndRef$curre","current","scrollIntoView","behavior","data","getMessages","handleSendMessage","e","preventDefault","trim","userMessage","id","Date","now","toString","conversation_id","role","content","timestamp","toISOString","prev","log","message","response","sendMessage","assistantMessage","model","concat","type","duration","messageHistory","slice","map","msg","_error$response","stack","directResponse","fetch","method","headers","body","JSON","stringify","ok","directData","json","Error","status","retryError","demoMessage","handleEditMessage","messageId","newContent","_objectSpread","formatTime","date","toLocaleTimeString","hour","minute","className","children","onClick","time","onEdit","ref","value","onChange","target","size","toFixed","checked","disabled","onSubmit","placeholder","rows","onKeyDown","key","shiftKey","onInput","style","height","Math","min","scrollHeight"],"sources":["C:/Users/xeyal/Desktop/Ai/app/frontend/src/components/ChatWindow.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport Message from './Message';\nimport { Send, Bot, AlertCircle } from 'lucide-react';\nimport { conversationService, chatService, ollamaService } from '../services/api';\nimport { useNotifications } from './NotificationBell';\n\nconst ChatWindow = ({ conversationId, onNewConversation, onMessagesUpdate }) => {\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadingMessages, setLoadingMessages] = useState(false);\n  const [error, setError] = useState(null);\n  const [useOllama, setUseOllama] = useState(false);\n  const [ollamaStatus, setOllamaStatus] = useState(false);\n  const [availableModels, setAvailableModels] = useState([]);\n  const [selectedModel, setSelectedModel] = useState('llama2');\n  const messagesEndRef = useRef(null);\n  const { showNotification } = useNotifications();\n\n  useEffect(() => {\n    loadMessages();\n  }, [conversationId]);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Ollama durumunu kontrol et\n  useEffect(() => {\n    const checkOllamaStatus = async () => {\n      try {\n        const isRunning = await ollamaService.checkStatus();\n        setOllamaStatus(isRunning);\n        \n        if (isRunning) {\n          const models = await ollamaService.listModels();\n          setAvailableModels(models);\n          if (models.length > 0) {\n            setSelectedModel(models[0].name);\n          }\n        }\n      } catch (error) {\n        console.error('Ollama durumu kontrol edilemedi:', error);\n        setOllamaStatus(false);\n      }\n    };\n\n    checkOllamaStatus();\n    // Her 30 saniyede bir kontrol et\n    const interval = setInterval(checkOllamaStatus, 30000);\n    \n    return () => clearInterval(interval);\n  }, []);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const loadMessages = useCallback(async () => {\n    if (!conversationId) return;\n    setLoadingMessages(true);\n    setError(null);\n    try {\n      const data = await conversationService.getMessages(conversationId);\n      setMessages(data);\n      onMessagesUpdate && onMessagesUpdate(data);\n    } catch (error) {\n      console.error('Mesajlar yüklenirken hata:', error);\n      setError('Mesajlar yüklenemedi');\n    } finally {\n      setLoadingMessages(false);\n    }\n  }, [conversationId, onMessagesUpdate]);\n\n  const handleSendMessage = useCallback(async (e) => {\n    e.preventDefault();\n    if (!inputMessage.trim() || isLoading) return;\n    \n    const userMessage = {\n      id: Date.now().toString(),\n      conversation_id: conversationId || 'new',\n      role: 'user',\n      content: inputMessage.trim(),\n      timestamp: new Date().toISOString()\n    };\n    \n    setMessages(prev => [...prev, userMessage]);\n    setInputMessage('');\n    setIsLoading(true);\n    \n    try {\n      console.log('🎯 ChatWindow - Sending message:', { conversationId, message: inputMessage.trim(), useOllama });\n      \n      let response;\n      \n      if (useOllama && ollamaStatus) {\n        // Ollama kullan\n        console.log('🤖 Using Ollama with model:', selectedModel);\n        response = await ollamaService.sendMessage(inputMessage.trim(), selectedModel);\n        \n        const assistantMessage = {\n          id: (Date.now() + 1).toString(),\n          conversation_id: conversationId || 'ollama-chat',\n          role: 'assistant',\n          content: response.message,\n          timestamp: response.timestamp,\n          model: response.model\n        };\n        \n        setMessages(prev => [...prev, assistantMessage]);\n        showNotification('Ollama Yanıtı', {\n          message: `${response.model} modeli ile yanıt verildi`,\n          type: 'success',\n          duration: 3000\n        });\n      } else {\n        // Normal Netlify Functions kullan\n        // Mesaj geçmişini hazırla (son 10 mesaj)\n        const messageHistory = messages.slice(-10).map(msg => ({\n          role: msg.role,\n          content: msg.content,\n          timestamp: msg.timestamp\n        }));\n        \n        response = await chatService.sendMessage(conversationId || 'new', inputMessage.trim(), messageHistory);\n        \n        console.log('✅ ChatWindow - Response received:', response);\n        \n        const assistantMessage = {\n          id: (Date.now() + 1).toString(),\n          conversation_id: response.conversation_id,\n          role: 'assistant',\n          content: response.message,\n          timestamp: response.timestamp\n        };\n        \n        setMessages(prev => [...prev, assistantMessage]);\n        showNotification('Yeni AI Yanıtı', {\n          message: 'AI asistanınız yanıt verdi',\n          type: 'success',\n          duration: 3000\n        });\n        \n        if (!conversationId && response.conversation_id) {\n          onNewConversation && onNewConversation(response.conversation_id);\n        }\n      }\n      \n      setError(null);\n    } catch (error) {\n      console.error('❌ ChatWindow - Error sending message:', error);\n      console.error('❌ ChatWindow - Error details:', {\n        message: error.message,\n        stack: error.stack,\n        response: error.response?.data\n      });\n\n      // Hata durumunda da gerçek API'yi çağırmaya çalış\n      try {\n        console.log('🔄 Retrying with direct API call...');\n        const directResponse = await fetch('/.netlify/functions/chat', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            conversation_id: conversationId || 'new',\n            message: inputMessage.trim()\n          }),\n        });\n\n        if (directResponse.ok) {\n          const directData = await directResponse.json();\n          console.log('✅ Direct API call successful:', directData);\n          \n          const assistantMessage = {\n            id: (Date.now() + 1).toString(),\n            conversation_id: directData.conversation_id,\n            role: 'assistant',\n            content: directData.message,\n            timestamp: directData.timestamp\n          };\n\n          setMessages(prev => [...prev, assistantMessage]);\n          showNotification('AI Yanıtı', {\n            message: 'AI asistanınız yanıt verdi',\n            type: 'success',\n            duration: 3000\n          });\n        } else {\n          throw new Error(`HTTP ${directResponse.status}`);\n        }\n      } catch (retryError) {\n        console.error('❌ Retry also failed:', retryError);\n        \n        // Son çare olarak demo mesajı\n        const demoMessage = {\n          id: (Date.now() + 1).toString(),\n          conversation_id: conversationId || 'demo',\n          role: 'assistant',\n          content: `Merhaba! \"${inputMessage.trim()}\" mesajınızı aldım. Bu bir demo yanıttır. OstWindGroup AI asistanınız size yardımcı olmaya hazır!`,\n          timestamp: new Date().toISOString()\n        };\n\n        setMessages(prev => [...prev, demoMessage]);\n\n        showNotification('Demo Yanıt', {\n          message: 'Demo yanıt gönderildi',\n          type: 'info',\n          duration: 3000\n        });\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  }, [inputMessage, isLoading, conversationId, onNewConversation, showNotification]);\n\n  const handleEditMessage = useCallback((messageId, newContent) => {\n    setMessages(prev => prev.map(msg => \n      msg.id === messageId ? { ...msg, content: newContent } : msg\n    ));\n  }, []);\n\n  const formatTime = useCallback((timestamp) => {\n    const date = new Date(timestamp);\n    return date.toLocaleTimeString('tr-TR', { \n      hour: '2-digit', \n      minute: '2-digit' \n    });\n  }, []);\n\n  return (\n    <div className=\"flex flex-col h-full\">\n      {/* Messages Area */}\n      <div className=\"chat-messages\">\n        {loadingMessages ? (\n          <div className=\"flex items-center justify-center h-full\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-8 h-8 bg-primary/10 rounded-full flex items-center justify-center\">\n                <Bot className=\"w-4 h-4 text-primary\" />\n              </div>\n              <span className=\"text-muted-foreground\">Mesajlar yükleniyor...</span>\n            </div>\n          </div>\n        ) : error ? (\n          <div className=\"empty-state\">\n            <div className=\"empty-icon bg-destructive/10\">\n              <AlertCircle className=\"w-8 h-8 text-destructive\" />\n            </div>\n            <h3 className=\"empty-title\">Bağlantı Hatası</h3>\n            <p className=\"empty-description\">{error}</p>\n            <button \n              onClick={() => { setError(null); loadMessages(); }} \n              className=\"modern-button-primary\"\n            >\n              Tekrar Dene\n            </button>\n          </div>\n        ) : messages.length === 0 ? (\n          <div className=\"empty-state\">\n            <div className=\"empty-icon\">\n              <Bot className=\"w-12 h-12 text-primary\" />\n            </div>\n            <h2 className=\"empty-title\">\n              OstWindGroup AI'ya Hoş Geldiniz\n            </h2>\n            <p className=\"empty-description\">\n              Size nasıl yardımcı olabilirim? Aşağıya mesajınızı yazın ve akıllı sohbetimizi başlatalım.\n            </p>\n            <div className=\"flex flex-wrap gap-2 justify-center\">\n              <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">💡 Soru sorabilirsiniz</span>\n              <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">🚀 Projelerinizde yardım</span>\n              <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">📚 Bilgi alabilirsiniz</span>\n            </div>\n          </div>\n        ) : (\n          <div className=\"space-y-4\">\n            {messages.map((message) => (\n              <div key={message.id} className=\"fade-in\">\n                <Message\n                  message={message}\n                  time={formatTime(message.timestamp)}\n                  onEdit={handleEditMessage}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n        \n        {isLoading && (\n          <div className=\"flex items-center space-x-3 p-4\">\n            <div className=\"w-8 h-8 bg-primary/10 rounded-full flex items-center justify-center\">\n              <Bot className=\"w-4 h-4 text-primary\" />\n            </div>\n            <span className=\"text-sm text-muted-foreground\">Yazıyor</span>\n            <div className=\"loading-dots\">\n              <div className=\"loading-dot\"></div>\n              <div className=\"loading-dot\"></div>\n              <div className=\"loading-dot\"></div>\n            </div>\n          </div>\n        )}\n        \n        <div ref={messagesEndRef} />\n      </div>\n\n      {/* AI Control Panel */}\n      <div className=\"ai-control-panel\">\n        <div className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-800 rounded-lg border\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"flex items-center space-x-2\">\n              <div className={`w-2 h-2 rounded-full ${ollamaStatus ? 'bg-green-500' : 'bg-red-500'}`}></div>\n              <span className=\"text-sm font-medium\">Ollama</span>\n              <span className=\"text-xs text-gray-500\">({ollamaStatus ? 'Çalışıyor' : 'Kapalı'})</span>\n            </div>\n            \n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-2 h-2 rounded-full bg-blue-500\"></div>\n              <span className=\"text-sm font-medium\">Groq API</span>\n              <span className=\"text-xs text-gray-500\">(Aktif)</span>\n            </div>\n            \n            {availableModels.length > 0 && (\n              <select\n                value={selectedModel}\n                onChange={(e) => setSelectedModel(e.target.value)}\n                className=\"text-xs px-2 py-1 border rounded bg-white dark:bg-gray-700\"\n              >\n                {availableModels.map((model) => (\n                  <option key={model.name} value={model.name}>\n                    {model.name} ({(model.size / 1024 / 1024 / 1024).toFixed(1)}GB)\n                  </option>\n                ))}\n              </select>\n            )}\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <label className=\"flex items-center space-x-1 text-xs\">\n              <input\n                type=\"checkbox\"\n                checked={useOllama}\n                onChange={(e) => setUseOllama(e.target.checked)}\n                className=\"rounded\"\n                disabled={!ollamaStatus}\n              />\n              <span>Ollama Kullan</span>\n            </label>\n          </div>\n        </div>\n      </div>\n\n      {/* Input Area */}\n      <div className=\"chat-input-area\">\n        <form onSubmit={handleSendMessage} className=\"relative\">\n          <div className=\"flex items-end space-x-3\">\n            <div className=\"flex-1 relative\">\n              <textarea\n                value={inputMessage}\n                onChange={(e) => setInputMessage(e.target.value)}\n                placeholder=\"Mesajınızı yazın...\"\n                disabled={isLoading}\n                className=\"modern-input\"\n                rows={1}\n                onKeyDown={(e) => {\n                  if (e.key === 'Enter' && !e.shiftKey) {\n                    e.preventDefault();\n                    handleSendMessage(e);\n                  }\n                }}\n                onInput={(e) => {\n                  e.target.style.height = 'auto';\n                  e.target.style.height = Math.min(e.target.scrollHeight, 128) + 'px';\n                }}\n              />\n            </div>\n            \n            <button\n              type=\"submit\"\n              disabled={!inputMessage.trim() || isLoading}\n              className=\"modern-button-primary hover-lift disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {isLoading ? (\n                <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\" />\n              ) : (\n                <Send className=\"w-4 h-4\" />\n              )}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatWindow;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}