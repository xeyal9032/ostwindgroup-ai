{"ast":null,"code":"import axios from'axios';const API_BASE_URL=process.env.REACT_APP_API_URL||'/.netlify/functions';const api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'},timeout:30000});// Request interceptor for debugging\napi.interceptors.request.use(config=>{var _config$method;console.log('üöÄ API Request:',(_config$method=config.method)===null||_config$method===void 0?void 0:_config$method.toUpperCase(),config.url);console.log('üì¶ Request data:',config.data);return config;},error=>{console.error('‚ùå Request error:',error);return Promise.reject(error);});// Response interceptor for debugging\napi.interceptors.response.use(response=>{console.log('‚úÖ API Response:',response.status,response.config.url);console.log('üì¶ Response data:',response.data);return response;},error=>{var _error$response,_error$response2;console.error('‚ùå Response error:',error);console.error('‚ùå Error details:',{message:error.message,status:(_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status,data:(_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.data,config:error.config});return Promise.reject(error);});export const conversationService={getConversations:async()=>{try{const response=await api.get('/conversations');return response.data;}catch(error){console.error('Sohbetler alƒ±namadƒ±:',error);return[{id:'conv-1',title:'Yeni Sohbet',created_at:new Date().toISOString(),updated_at:new Date().toISOString()}];}},createConversation:async function(){let title=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'Yeni Sohbet';try{const response=await api.post('/conversations',{title});return response.data;}catch(error){console.error('Sohbet olu≈üturulamadƒ±:',error);return{id:'conv-'+Date.now(),title:title,created_at:new Date().toISOString(),updated_at:new Date().toISOString()};}},deleteConversation:async id=>{try{await api.delete(\"/conversations/\".concat(id));return{success:true};}catch(error){console.error('Sohbet silinemedi:',error);return{success:true};}},getMessages:async conversationId=>{try{const response=await api.get(\"/messages?conversationId=\".concat(conversationId));return response.data;}catch(error){console.error('Mesajlar alƒ±namadƒ±:',error);return[];}}};export const chatService={sendMessage:async(conversationId,message)=>{console.log('üéØ ChatService - sendMessage called:',{conversationId,message});console.log('üåê API Base URL:',API_BASE_URL);try{const response=await api.post('/chat',{conversation_id:conversationId,message:message});console.log('‚úÖ ChatService - API response received:',response.data);console.log('üì¶ Response message content:',response.data.message);return{conversation_id:response.data.conversation_id,message:response.data.message,timestamp:response.data.timestamp};}catch(error){var _error$response3,_error$response4,_error$response5,_error$response6;console.error('‚ùå ChatService - API error:',error);console.error('‚ùå ChatService - Error details:',{message:error.message,status:(_error$response3=error.response)===null||_error$response3===void 0?void 0:_error$response3.status,data:(_error$response4=error.response)===null||_error$response4===void 0?void 0:_error$response4.data,config:error.config});// Daha detaylƒ± hata mesajƒ±\nif(((_error$response5=error.response)===null||_error$response5===void 0?void 0:_error$response5.status)===500){throw new Error('Sunucu hatasƒ±. L√ºtfen daha sonra tekrar deneyin.');}else if(((_error$response6=error.response)===null||_error$response6===void 0?void 0:_error$response6.status)===404){throw new Error('API endpoint bulunamadƒ±.');}else if(error.code==='ECONNABORTED'){throw new Error('ƒ∞stek zaman a≈üƒ±mƒ±na uƒüradƒ±. L√ºtfen tekrar deneyin.');}else{throw new Error(\"Mesaj g\\xF6nderilemedi: \".concat(error.message));}}}};export default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","timeout","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","data","error","Promise","reject","response","status","_error$response","_error$response2","message","conversationService","getConversations","get","id","title","created_at","Date","toISOString","updated_at","createConversation","arguments","length","undefined","post","now","deleteConversation","delete","concat","success","getMessages","conversationId","chatService","sendMessage","conversation_id","timestamp","_error$response3","_error$response4","_error$response5","_error$response6","Error","code"],"sources":["C:/Users/xeyal/Desktop/Ai/app/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || '/.netlify/functions';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  timeout: 30000,\n});\n\n// Request interceptor for debugging\napi.interceptors.request.use(\n  (config) => {\n    console.log('üöÄ API Request:', config.method?.toUpperCase(), config.url);\n    console.log('üì¶ Request data:', config.data);\n    return config;\n  },\n  (error) => {\n    console.error('‚ùå Request error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for debugging\napi.interceptors.response.use(\n  (response) => {\n    console.log('‚úÖ API Response:', response.status, response.config.url);\n    console.log('üì¶ Response data:', response.data);\n    return response;\n  },\n  (error) => {\n    console.error('‚ùå Response error:', error);\n    console.error('‚ùå Error details:', {\n      message: error.message,\n      status: error.response?.status,\n      data: error.response?.data,\n      config: error.config\n    });\n    return Promise.reject(error);\n  }\n);\n\nexport const conversationService = {\n  getConversations: async () => {\n    try {\n      const response = await api.get('/conversations');\n      return response.data;\n    } catch (error) {\n      console.error('Sohbetler alƒ±namadƒ±:', error);\n      return [\n        {\n          id: 'conv-1',\n          title: 'Yeni Sohbet',\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString()\n        }\n      ];\n    }\n  },\n\n  createConversation: async (title = 'Yeni Sohbet') => {\n    try {\n      const response = await api.post('/conversations', { title });\n      return response.data;\n    } catch (error) {\n      console.error('Sohbet olu≈üturulamadƒ±:', error);\n      return {\n        id: 'conv-' + Date.now(),\n        title: title,\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      };\n    }\n  },\n\n  deleteConversation: async (id) => {\n    try {\n      await api.delete(`/conversations/${id}`);\n      return { success: true };\n    } catch (error) {\n      console.error('Sohbet silinemedi:', error);\n      return { success: true };\n    }\n  },\n\n  getMessages: async (conversationId) => {\n    try {\n      const response = await api.get(`/messages?conversationId=${conversationId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Mesajlar alƒ±namadƒ±:', error);\n      return [];\n    }\n  },\n};\n\nexport const chatService = {\n  sendMessage: async (conversationId, message) => {\n    console.log('üéØ ChatService - sendMessage called:', { conversationId, message });\n    console.log('üåê API Base URL:', API_BASE_URL);\n    \n    try {\n      const response = await api.post('/chat', {\n        conversation_id: conversationId,\n        message: message\n      });\n      \n      console.log('‚úÖ ChatService - API response received:', response.data);\n      console.log('üì¶ Response message content:', response.data.message);\n      \n      return {\n        conversation_id: response.data.conversation_id,\n        message: response.data.message,\n        timestamp: response.data.timestamp\n      };\n    } catch (error) {\n      console.error('‚ùå ChatService - API error:', error);\n      console.error('‚ùå ChatService - Error details:', {\n        message: error.message,\n        status: error.response?.status,\n        data: error.response?.data,\n        config: error.config\n      });\n      \n      // Daha detaylƒ± hata mesajƒ±\n      if (error.response?.status === 500) {\n        throw new Error('Sunucu hatasƒ±. L√ºtfen daha sonra tekrar deneyin.');\n      } else if (error.response?.status === 404) {\n        throw new Error('API endpoint bulunamadƒ±.');\n      } else if (error.code === 'ECONNABORTED') {\n        throw new Error('ƒ∞stek zaman a≈üƒ±mƒ±na uƒüradƒ±. L√ºtfen tekrar deneyin.');\n      } else {\n        throw new Error(`Mesaj g√∂nderilemedi: ${error.message}`);\n      }\n    }\n  },\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}