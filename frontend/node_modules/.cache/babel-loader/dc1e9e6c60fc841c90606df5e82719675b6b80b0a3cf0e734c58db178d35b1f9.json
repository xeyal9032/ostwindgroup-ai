{"ast":null,"code":"import _objectSpread from\"C:/Users/xeyal/Desktop/Ai/app/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useRef,useCallback,useMemo}from'react';import{Button}from'./ui/Button';import Message from'./Message';import{Send,Bot,AlertCircle}from'lucide-react';import{conversationService,chatService}from'../services/api';import EmojiPickerButton from'./EmojiPickerButton';import{FileUploadButton,FilePreview}from'./FileUpload';import VoiceMessageButton from'./VoiceMessageButton';import ThemeToggle from'./ThemeToggle';import ThemeSelector from'./ThemeSelector';import{useNotifications}from'./NotificationBell';import{handleError,showErrorNotification,retryRequest}from'../utils/errorHandler';import{useDebounce,usePerformanceMonitor}from'../utils/performance';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ChatWindow=_ref=>{let{conversationId,onNewConversation,onMessagesUpdate}=_ref;const[messages,setMessages]=useState([]);const[inputMessage,setInputMessage]=useState('');const[isLoading,setIsLoading]=useState(false);const[loadingMessages,setLoadingMessages]=useState(false);const[selectedFile,setSelectedFile]=useState(null);const[error,setError]=useState(null);const[retryCount,setRetryCount]=useState(0);const messagesEndRef=useRef(null);const{showNotification}=useNotifications();// Performance monitoring\nconst renderCount=usePerformanceMonitor('ChatWindow');// Debounced input for better performance\nconst debouncedInputMessage=useDebounce(inputMessage,300);useEffect(()=>{if(conversationId){loadMessages();}else{setMessages([]);}},[conversationId]);useEffect(()=>{scrollToBottom();},[messages]);const scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:'smooth'});};const loadMessages=useCallback(async()=>{if(!conversationId)return;setLoadingMessages(true);setError(null);try{// Ã–nce imported mesajlarÄ± kontrol et\nconst importedData=JSON.parse(localStorage.getItem('imported_messages')||'{}');if(importedData[conversationId]){setMessages(importedData[conversationId]);onMessagesUpdate&&onMessagesUpdate(importedData[conversationId]);setLoadingMessages(false);return;}// Retry mechanism ile API'den yÃ¼kle\nconst data=await retryRequest(()=>conversationService.getMessages(conversationId),3,1000);setMessages(data);onMessagesUpdate&&onMessagesUpdate(data);setRetryCount(0);}catch(error){const errorInfo=handleError(error,'loadMessages');setError(errorInfo);showErrorNotification(error,showNotification);// Fallback: local storage'dan yÃ¼kle\nconst localMessages=JSON.parse(localStorage.getItem('messages')||'{}');if(localMessages[conversationId]){setMessages(localMessages[conversationId]);onMessagesUpdate&&onMessagesUpdate(localMessages[conversationId]);}}finally{setLoadingMessages(false);}},[conversationId,onMessagesUpdate,showNotification]);const handleSendMessage=useCallback(async e=>{e.preventDefault();if(!inputMessage.trim()||isLoading)return;const userMessage={id:Date.now().toString(),conversation_id:conversationId,role:'user',content:inputMessage.trim(),timestamp:new Date().toISOString()};// Optimistic update\nsetMessages(prev=>[...prev,userMessage]);setInputMessage('');setIsLoading(true);try{console.log('Sending message:',inputMessage.trim(),'to conversation:',conversationId||'new');// Retry mechanism ile mesaj gÃ¶nder\nconst response=await retryRequest(()=>chatService.sendMessage(conversationId||'new',inputMessage.trim()),2,2000);console.log('Received response:',response);// Update messages with server response\nsetMessages(prev=>{const filtered=prev.filter(msg=>msg.id!==userMessage.id);return[...filtered,response.user_message,response.assistant_message];});// Show notification for new AI response\nshowNotification('Yeni AI YanÄ±tÄ±',{message:response.assistant_message.content.substring(0,100)+'...',type:'success'});// If this was a new conversation, trigger conversation list refresh\nif(!conversationId&&response.conversation_id){if(onNewConversation){onNewConversation();}showNotification('Yeni Sohbet BaÅŸlatÄ±ldÄ±',{message:'Yeni sohbet baÅŸarÄ±yla oluÅŸturuldu',type:'info'});}setError(null);setRetryCount(0);}catch(error){const errorInfo=handleError(error,'sendMessage');setError(errorInfo);showErrorNotification(error,showNotification);// Remove the optimistic message on error\nsetMessages(prev=>prev.filter(msg=>msg.id!==userMessage.id));// Increment retry count\nsetRetryCount(prev=>prev+1);}finally{setIsLoading(false);}},[inputMessage,isLoading,conversationId,onNewConversation,showNotification]);const handleEmojiSelect=emoji=>{setInputMessage(prev=>prev+emoji);};const handleFileSelect=file=>{setSelectedFile(file);};const handleFileRemove=()=>{setSelectedFile(null);};const handleVoiceMessage=async convertedText=>{if(convertedText){setInputMessage(convertedText);}else{setInputMessage('ðŸŽ¤ Sesli mesaj gÃ¶nderildi (Ses-metin Ã§evirisi aktif deÄŸil)');}};const handleEditMessage=(messageId,newContent)=>{setMessages(prev=>prev.map(msg=>msg.id===messageId?_objectSpread(_objectSpread({},msg),{},{content:newContent}):msg));onMessagesUpdate&&onMessagesUpdate(messages);};// Memoized time formatter\nconst formatTime=useCallback(timestamp=>{return new Date(timestamp).toLocaleTimeString('tr-TR',{hour:'2-digit',minute:'2-digit'});},[]);// Memoized message list for better performance\nconst memoizedMessages=useMemo(()=>{return messages.map((message,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"animate-fade-in-up animate-delay-\".concat(Math.min(index*100,500)),children:/*#__PURE__*/_jsx(Message,{message:message,time:formatTime(message.timestamp),onEdit:handleEditMessage})},message.id));},[messages,formatTime]);return/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col h-full\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"hidden md:block chatgpt-header\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-8 h-8 bg-gradient-to-br from-green-500 to-green-600 rounded-lg flex items-center justify-center\",children:/*#__PURE__*/_jsx(Bot,{className:\"w-4 h-4 text-white\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-semibold text-gray-900 dark:text-white\",children:conversationId?'AI Asistan':'Yeni Sohbet'}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500 dark:text-gray-400\",children:conversationId?'Size yardÄ±mcÄ± olmaya hazÄ±rÄ±m':'Hemen baÅŸlayalÄ±m'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[conversationId&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2 px-3 py-1 bg-green-100 dark:bg-green-900/30 rounded-full\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-2 h-2 bg-green-500 rounded-full animate-pulse\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-green-600 dark:text-green-400 font-medium\",children:\"\\xC7evrimi\\xE7i\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-1\",children:[/*#__PURE__*/_jsx(ThemeToggle,{}),/*#__PURE__*/_jsx(ThemeSelector,{})]})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"chatgpt-messages\",children:[loadingMessages?/*#__PURE__*/_jsxs(\"div\",{className:\"chatgpt-loading\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-6 h-6 bg-gradient-to-br from-green-500 to-green-600 rounded-full flex items-center justify-center\",children:/*#__PURE__*/_jsx(Bot,{className:\"w-3 h-3 text-white\"})}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium\",children:\"Mesajlar y\\xFCkleniyor...\"})]}):error?/*#__PURE__*/_jsxs(\"div\",{className:\"chatgpt-empty-state\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chatgpt-empty-icon bg-red-500\",children:/*#__PURE__*/_jsx(AlertCircle,{className:\"w-8 h-8 text-white\"})}),/*#__PURE__*/_jsx(\"h3\",{className:\"chatgpt-empty-title\",children:\"Ba\\u011Flant\\u0131 Hatas\\u0131\"}),/*#__PURE__*/_jsx(\"p\",{className:\"chatgpt-empty-description\",children:error.message}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-3\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setError(null);loadMessages();},className:\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors text-sm\",children:\"Tekrar Dene\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setError(null);window.location.reload();},className:\"px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors text-sm\",children:\"Sayfay\\u0131 Yenile\"})]}),retryCount>0&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-xs text-gray-500 dark:text-gray-400 mt-2\",children:[\"Deneme say\\u0131s\\u0131: \",retryCount]})]}):messages.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"chatgpt-empty-state\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chatgpt-empty-icon\",children:/*#__PURE__*/_jsx(Bot,{className:\"w-8 h-8 text-white\"})}),/*#__PURE__*/_jsx(\"h3\",{className:\"chatgpt-empty-title\",children:\"OstWindGroup AI'ya Ho\\u015F Geldiniz\"}),/*#__PURE__*/_jsx(\"p\",{className:\"chatgpt-empty-description\",children:\"Size nas\\u0131l yard\\u0131mc\\u0131 olabilirim? A\\u015Fa\\u011F\\u0131ya mesaj\\u0131n\\u0131z\\u0131 yaz\\u0131n ve ak\\u0131ll\\u0131 sohbetimizi ba\\u015Flatal\\u0131m.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-wrap gap-2 justify-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"px-3 py-1 bg-green-100 dark:bg-green-900/30 text-green-700 dark:text-green-300 rounded-full text-sm\",children:\"\\uD83D\\uDCA1 Soru sorabilirsiniz\"}),/*#__PURE__*/_jsx(\"span\",{className:\"px-3 py-1 bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 rounded-full text-sm\",children:\"\\uD83D\\uDE80 Projelerinizde yard\\u0131m\"}),/*#__PURE__*/_jsx(\"span\",{className:\"px-3 py-1 bg-purple-100 dark:bg-purple-900/30 text-purple-700 dark:text-purple-300 rounded-full text-sm\",children:\"\\uD83D\\uDCDA Bilgi alabilirsiniz\"})]})]}):memoizedMessages,isLoading&&/*#__PURE__*/_jsxs(\"div\",{className:\"chatgpt-loading\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-6 h-6 bg-gradient-to-br from-green-500 to-green-600 rounded-full flex items-center justify-center\",children:/*#__PURE__*/_jsx(Bot,{className:\"w-3 h-3 text-white\"})}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium\",children:\"Yaz\\u0131yor\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"chatgpt-loading-dots\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chatgpt-loading-dot\"}),/*#__PURE__*/_jsx(\"div\",{className:\"chatgpt-loading-dot\"}),/*#__PURE__*/_jsx(\"div\",{className:\"chatgpt-loading-dot\"})]})]}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chatgpt-input-area\",children:[selectedFile&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-4 max-w-2xl mx-auto\",children:/*#__PURE__*/_jsx(FilePreview,{file:selectedFile,onRemove:handleFileRemove})}),/*#__PURE__*/_jsx(\"div\",{className:\"chatgpt-input-container\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSendMessage,className:\"relative\",children:[/*#__PURE__*/_jsx(\"textarea\",{value:inputMessage,onChange:e=>setInputMessage(e.target.value),placeholder:\"Mesaj\\u0131n\\u0131z\\u0131 yaz\\u0131n...\",disabled:isLoading,className:\"chatgpt-input\",rows:1,onKeyDown:e=>{if(e.key==='Enter'&&!e.shiftKey){e.preventDefault();handleSendMessage(e);}},onInput:e=>{e.target.style.height='auto';e.target.style.height=Math.min(e.target.scrollHeight,128)+'px';}}),/*#__PURE__*/_jsxs(\"div\",{className:\"absolute right-2 top-2 flex items-center space-x-1\",children:[/*#__PURE__*/_jsx(VoiceMessageButton,{onVoiceMessage:handleVoiceMessage,disabled:isLoading}),/*#__PURE__*/_jsx(FileUploadButton,{onFileSelect:handleFileSelect,disabled:isLoading}),/*#__PURE__*/_jsx(EmojiPickerButton,{onEmojiSelect:handleEmojiSelect})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:!inputMessage.trim()&&!selectedFile||isLoading,className:\"chatgpt-send-button\",children:isLoading?/*#__PURE__*/_jsx(\"div\",{className:\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"}):/*#__PURE__*/_jsx(Send,{className:\"w-4 h-4 text-white\"})})]})})]})]});};ChatWindow.displayName='ChatWindow';export default ChatWindow;","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useMemo","Button","Message","Send","Bot","AlertCircle","conversationService","chatService","EmojiPickerButton","FileUploadButton","FilePreview","VoiceMessageButton","ThemeToggle","ThemeSelector","useNotifications","handleError","showErrorNotification","retryRequest","useDebounce","usePerformanceMonitor","jsx","_jsx","jsxs","_jsxs","ChatWindow","_ref","conversationId","onNewConversation","onMessagesUpdate","messages","setMessages","inputMessage","setInputMessage","isLoading","setIsLoading","loadingMessages","setLoadingMessages","selectedFile","setSelectedFile","error","setError","retryCount","setRetryCount","messagesEndRef","showNotification","renderCount","debouncedInputMessage","loadMessages","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","importedData","JSON","parse","localStorage","getItem","data","getMessages","errorInfo","localMessages","handleSendMessage","e","preventDefault","trim","userMessage","id","Date","now","toString","conversation_id","role","content","timestamp","toISOString","prev","console","log","response","sendMessage","filtered","filter","msg","user_message","assistant_message","message","substring","type","handleEmojiSelect","emoji","handleFileSelect","file","handleFileRemove","handleVoiceMessage","convertedText","handleEditMessage","messageId","newContent","map","_objectSpread","formatTime","toLocaleTimeString","hour","minute","memoizedMessages","index","className","concat","Math","min","children","time","onEdit","onClick","window","location","reload","length","ref","onRemove","onSubmit","value","onChange","target","placeholder","disabled","rows","onKeyDown","key","shiftKey","onInput","style","height","scrollHeight","onVoiceMessage","onFileSelect","onEmojiSelect","displayName"],"sources":["C:/Users/xeyal/Desktop/Ai/app/frontend/src/components/ChatWindow.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\nimport { Button } from './ui/Button';\nimport Message from './Message';\nimport { Send, Bot, AlertCircle } from 'lucide-react';\nimport { conversationService, chatService } from '../services/api';\nimport EmojiPickerButton from './EmojiPickerButton';\nimport { FileUploadButton, FilePreview } from './FileUpload';\nimport VoiceMessageButton from './VoiceMessageButton';\nimport ThemeToggle from './ThemeToggle';\nimport ThemeSelector from './ThemeSelector';\nimport { useNotifications } from './NotificationBell';\nimport { handleError, showErrorNotification, retryRequest } from '../utils/errorHandler';\nimport { useDebounce, usePerformanceMonitor } from '../utils/performance';\n\nconst ChatWindow = ({ conversationId, onNewConversation, onMessagesUpdate }) => {\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadingMessages, setLoadingMessages] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [error, setError] = useState(null);\n  const [retryCount, setRetryCount] = useState(0);\n  const messagesEndRef = useRef(null);\n  const { showNotification } = useNotifications();\n  \n  // Performance monitoring\n  const renderCount = usePerformanceMonitor('ChatWindow');\n  \n  // Debounced input for better performance\n  const debouncedInputMessage = useDebounce(inputMessage, 300);\n\n  useEffect(() => {\n    if (conversationId) {\n      loadMessages();\n    } else {\n      setMessages([]);\n    }\n  }, [conversationId]);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const loadMessages = useCallback(async () => {\n    if (!conversationId) return;\n    \n    setLoadingMessages(true);\n    setError(null);\n    \n    try {\n      // Ã–nce imported mesajlarÄ± kontrol et\n      const importedData = JSON.parse(localStorage.getItem('imported_messages') || '{}');\n      if (importedData[conversationId]) {\n        setMessages(importedData[conversationId]);\n        onMessagesUpdate && onMessagesUpdate(importedData[conversationId]);\n        setLoadingMessages(false);\n        return;\n      }\n\n      // Retry mechanism ile API'den yÃ¼kle\n      const data = await retryRequest(\n        () => conversationService.getMessages(conversationId),\n        3,\n        1000\n      );\n      \n      setMessages(data);\n      onMessagesUpdate && onMessagesUpdate(data);\n      setRetryCount(0);\n    } catch (error) {\n      const errorInfo = handleError(error, 'loadMessages');\n      setError(errorInfo);\n      showErrorNotification(error, showNotification);\n      \n      // Fallback: local storage'dan yÃ¼kle\n      const localMessages = JSON.parse(localStorage.getItem('messages') || '{}');\n      if (localMessages[conversationId]) {\n        setMessages(localMessages[conversationId]);\n        onMessagesUpdate && onMessagesUpdate(localMessages[conversationId]);\n      }\n    } finally {\n      setLoadingMessages(false);\n    }\n  }, [conversationId, onMessagesUpdate, showNotification]);\n\n  const handleSendMessage = useCallback(async (e) => {\n    e.preventDefault();\n    if (!inputMessage.trim() || isLoading) return;\n\n    const userMessage = {\n      id: Date.now().toString(),\n      conversation_id: conversationId,\n      role: 'user',\n      content: inputMessage.trim(),\n      timestamp: new Date().toISOString()\n    };\n\n    // Optimistic update\n    setMessages(prev => [...prev, userMessage]);\n    setInputMessage('');\n    setIsLoading(true);\n\n    try {\n      console.log('Sending message:', inputMessage.trim(), 'to conversation:', conversationId || 'new');\n      \n      // Retry mechanism ile mesaj gÃ¶nder\n      const response = await retryRequest(\n        () => chatService.sendMessage(conversationId || 'new', inputMessage.trim()),\n        2,\n        2000\n      );\n      \n      console.log('Received response:', response);\n      \n      // Update messages with server response\n      setMessages(prev => {\n        const filtered = prev.filter(msg => msg.id !== userMessage.id);\n        return [...filtered, response.user_message, response.assistant_message];\n      });\n\n      // Show notification for new AI response\n      showNotification('Yeni AI YanÄ±tÄ±', {\n        message: response.assistant_message.content.substring(0, 100) + '...',\n        type: 'success'\n      });\n\n      // If this was a new conversation, trigger conversation list refresh\n      if (!conversationId && response.conversation_id) {\n        if (onNewConversation) {\n          onNewConversation();\n        }\n        showNotification('Yeni Sohbet BaÅŸlatÄ±ldÄ±', {\n          message: 'Yeni sohbet baÅŸarÄ±yla oluÅŸturuldu',\n          type: 'info'\n        });\n      }\n      \n      setError(null);\n      setRetryCount(0);\n    } catch (error) {\n      const errorInfo = handleError(error, 'sendMessage');\n      setError(errorInfo);\n      showErrorNotification(error, showNotification);\n      \n      // Remove the optimistic message on error\n      setMessages(prev => prev.filter(msg => msg.id !== userMessage.id));\n      \n      // Increment retry count\n      setRetryCount(prev => prev + 1);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [inputMessage, isLoading, conversationId, onNewConversation, showNotification]);\n\n  const handleEmojiSelect = (emoji) => {\n    setInputMessage(prev => prev + emoji);\n  };\n\n  const handleFileSelect = (file) => {\n    setSelectedFile(file);\n  };\n\n  const handleFileRemove = () => {\n    setSelectedFile(null);\n  };\n\n  const handleVoiceMessage = async (convertedText) => {\n    if (convertedText) {\n      setInputMessage(convertedText);\n    } else {\n      setInputMessage('ðŸŽ¤ Sesli mesaj gÃ¶nderildi (Ses-metin Ã§evirisi aktif deÄŸil)');\n    }\n  };\n\n  const handleEditMessage = (messageId, newContent) => {\n    setMessages(prev => prev.map(msg => \n      msg.id === messageId ? { ...msg, content: newContent } : msg\n    ));\n    onMessagesUpdate && onMessagesUpdate(messages);\n  };\n\n  // Memoized time formatter\n  const formatTime = useCallback((timestamp) => {\n    return new Date(timestamp).toLocaleTimeString('tr-TR', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  }, []);\n\n  // Memoized message list for better performance\n  const memoizedMessages = useMemo(() => {\n    return messages.map((message, index) => (\n      <div key={message.id} className={`animate-fade-in-up animate-delay-${Math.min(index * 100, 500)}`}>\n        <Message\n          message={message}\n          time={formatTime(message.timestamp)}\n          onEdit={handleEditMessage}\n        />\n      </div>\n    ));\n  }, [messages, formatTime]);\n\n  return (\n    <div className=\"flex flex-col h-full\">\n      {/* Desktop Header - Hidden on mobile */}\n      <div className=\"hidden md:block chatgpt-header\">\n        <div className=\"flex items-center space-x-4\">\n          <div className=\"w-8 h-8 bg-gradient-to-br from-green-500 to-green-600 rounded-lg flex items-center justify-center\">\n            <Bot className=\"w-4 h-4 text-white\" />\n          </div>\n          <div className=\"flex-1\">\n            <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n              {conversationId ? 'AI Asistan' : 'Yeni Sohbet'}\n            </h2>\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n              {conversationId ? 'Size yardÄ±mcÄ± olmaya hazÄ±rÄ±m' : 'Hemen baÅŸlayalÄ±m'}\n            </p>\n          </div>\n          <div className=\"flex items-center space-x-3\">\n            {conversationId && (\n              <div className=\"flex items-center space-x-2 px-3 py-1 bg-green-100 dark:bg-green-900/30 rounded-full\">\n                <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\"></div>\n                <span className=\"text-xs text-green-600 dark:text-green-400 font-medium\">Ã‡evrimiÃ§i</span>\n              </div>\n            )}\n            <div className=\"flex items-center space-x-1\">\n              <ThemeToggle />\n              <ThemeSelector />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Messages */}\n      <div className=\"chatgpt-messages\">\n        {loadingMessages ? (\n          <div className=\"chatgpt-loading\">\n            <div className=\"w-6 h-6 bg-gradient-to-br from-green-500 to-green-600 rounded-full flex items-center justify-center\">\n              <Bot className=\"w-3 h-3 text-white\" />\n            </div>\n            <span className=\"text-sm font-medium\">Mesajlar yÃ¼kleniyor...</span>\n          </div>\n        ) : error ? (\n          <div className=\"chatgpt-empty-state\">\n            <div className=\"chatgpt-empty-icon bg-red-500\">\n              <AlertCircle className=\"w-8 h-8 text-white\" />\n            </div>\n            <h3 className=\"chatgpt-empty-title\">\n              BaÄŸlantÄ± HatasÄ±\n            </h3>\n            <p className=\"chatgpt-empty-description\">\n              {error.message}\n            </p>\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => {\n                  setError(null);\n                  loadMessages();\n                }}\n                className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors text-sm\"\n              >\n                Tekrar Dene\n              </button>\n              <button\n                onClick={() => {\n                  setError(null);\n                  window.location.reload();\n                }}\n                className=\"px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors text-sm\"\n              >\n                SayfayÄ± Yenile\n              </button>\n            </div>\n            {retryCount > 0 && (\n              <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\n                Deneme sayÄ±sÄ±: {retryCount}\n              </p>\n            )}\n          </div>\n        ) : messages.length === 0 ? (\n          <div className=\"chatgpt-empty-state\">\n            <div className=\"chatgpt-empty-icon\">\n              <Bot className=\"w-8 h-8 text-white\" />\n            </div>\n            <h3 className=\"chatgpt-empty-title\">\n              OstWindGroup AI'ya HoÅŸ Geldiniz\n            </h3>\n            <p className=\"chatgpt-empty-description\">\n              Size nasÄ±l yardÄ±mcÄ± olabilirim? AÅŸaÄŸÄ±ya mesajÄ±nÄ±zÄ± yazÄ±n ve akÄ±llÄ± sohbetimizi baÅŸlatalÄ±m.\n            </p>\n            <div className=\"flex flex-wrap gap-2 justify-center\">\n              <span className=\"px-3 py-1 bg-green-100 dark:bg-green-900/30 text-green-700 dark:text-green-300 rounded-full text-sm\">\n                ðŸ’¡ Soru sorabilirsiniz\n              </span>\n              <span className=\"px-3 py-1 bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 rounded-full text-sm\">\n                ðŸš€ Projelerinizde yardÄ±m\n              </span>\n              <span className=\"px-3 py-1 bg-purple-100 dark:bg-purple-900/30 text-purple-700 dark:text-purple-300 rounded-full text-sm\">\n                ðŸ“š Bilgi alabilirsiniz\n              </span>\n            </div>\n          </div>\n        ) : (\n          memoizedMessages\n        )}\n        \n        {isLoading && (\n          <div className=\"chatgpt-loading\">\n            <div className=\"w-6 h-6 bg-gradient-to-br from-green-500 to-green-600 rounded-full flex items-center justify-center\">\n              <Bot className=\"w-3 h-3 text-white\" />\n            </div>\n            <span className=\"text-sm font-medium\">YazÄ±yor</span>\n            <div className=\"chatgpt-loading-dots\">\n              <div className=\"chatgpt-loading-dot\"></div>\n              <div className=\"chatgpt-loading-dot\"></div>\n              <div className=\"chatgpt-loading-dot\"></div>\n            </div>\n          </div>\n        )}\n        \n        <div ref={messagesEndRef} />\n      </div>\n\n      {/* Input */}\n      <div className=\"chatgpt-input-area\">\n        {selectedFile && (\n          <div className=\"mb-4 max-w-2xl mx-auto\">\n            <FilePreview file={selectedFile} onRemove={handleFileRemove} />\n          </div>\n        )}\n        \n        <div className=\"chatgpt-input-container\">\n          <form onSubmit={handleSendMessage} className=\"relative\">\n            <textarea\n              value={inputMessage}\n              onChange={(e) => setInputMessage(e.target.value)}\n              placeholder=\"MesajÄ±nÄ±zÄ± yazÄ±n...\"\n              disabled={isLoading}\n              className=\"chatgpt-input\"\n              rows={1}\n              onKeyDown={(e) => {\n                if (e.key === 'Enter' && !e.shiftKey) {\n                  e.preventDefault();\n                  handleSendMessage(e);\n                }\n              }}\n              onInput={(e) => {\n                e.target.style.height = 'auto';\n                e.target.style.height = Math.min(e.target.scrollHeight, 128) + 'px';\n              }}\n            />\n            \n            <div className=\"absolute right-2 top-2 flex items-center space-x-1\">\n              <VoiceMessageButton onVoiceMessage={handleVoiceMessage} disabled={isLoading} />\n              <FileUploadButton onFileSelect={handleFileSelect} disabled={isLoading} />\n              <EmojiPickerButton onEmojiSelect={handleEmojiSelect} />\n            </div>\n            \n            <button \n              type=\"submit\" \n              disabled={(!inputMessage.trim() && !selectedFile) || isLoading}\n              className=\"chatgpt-send-button\"\n            >\n              {isLoading ? (\n                <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\" />\n              ) : (\n                <Send className=\"w-4 h-4 text-white\" />\n              )}\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nChatWindow.displayName = 'ChatWindow';\n\nexport default ChatWindow;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}